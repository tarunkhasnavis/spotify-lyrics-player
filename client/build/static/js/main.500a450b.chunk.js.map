{"version":3,"sources":["Login.js","useAuth.js","Player.js","TrackSearchResult.js","Dashboard.js","App.js","index.js"],"names":["Login","Container","className","style","minHeight","href","useAuth","code","useState","accessToken","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","useEffect","axios","post","then","res","console","log","data","window","history","pushState","catch","location","interval","setInterval","clearInterval","Player","trackUri","play","setPlay","token","showSaveIcon","callback","state","isPlaying","uris","TrackSearchResult","track","chooseTrack","cursor","onClick","src","albumUrl","height","width","title","artist","spotifyApi","SpotifyWebApi","clientId","Dashboard","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","lyrics","setLyrics","get","params","cancel","searchTracks","body","tracks","items","map","smallestAlbumImage","album","images","reduce","smallest","image","artists","name","uri","url","Form","Control","type","placeholder","value","onChange","e","target","overflowY","length","whiteSpace","URLSearchParams","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.500a450b.chunk.js","sourcesContent":["import React from 'react';\nimport { Container } from 'react-bootstrap';\n\n// Authentication URL with necessary query parameters from spotify API docs\nconst AUTH_URL = \"https://accounts.spotify.com/authorize?client_id=bc43d635979c4b9e8e108dcf47ecc4e0&response_type=code&redirect_uri=http://localhost:3000&scope=streaming%20user-read-email%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state\"\n\n\nfunction Login() {\n    return (\n        // Use bootstrat container type \n        <Container className = \"d-flex justify-content-center align-items-center\"\n            style={{ minHeight: \"100vh\" }}\n        >\n            <a className=\"btn btn-success btn-lg\" href={AUTH_URL}>\n                Login with Spotify\n            </a>\n        </Container>\n    )\n}\n\nexport default Login\n","import {useEffect, useState} from 'react'\nimport axios from \"axios\"\n\nfunction useAuth(code) {\n    const [accessToken, setAccessToken] = useState()\n    const [refreshToken, setRefreshToken] = useState()\n    const [expiresIn, setExpiresIn] = useState()\n\n    useEffect(() => {\n        axios\n          .post(\"http://localhost:3001/login\", {\n            code,\n          })\n          .then(res => {\n            console.log(res.data)\n            setAccessToken(res.data.accessToken)\n            setRefreshToken(res.data.refreshToken)\n            setExpiresIn(res.data.expiresIn)\n            window.history.pushState({}, null, \"/\")\n          })\n          .catch(() => {\n            window.location = \"/\"\n          })\n      }, [code])\n    \n      useEffect(() => {\n        if (!refreshToken || !expiresIn) return\n        const interval = setInterval(() => {\n          axios\n            .post(\"http://localhost:3001/refresh\", {\n              refreshToken,\n            })\n            .then(res => {\n              setAccessToken(res.data.accessToken)\n              setExpiresIn(res.data.expiresIn)\n            })\n            .catch(() => {\n              window.location = \"/\"\n            })\n        }, (expiresIn - 60) * 1000)\n    \n        return () => clearInterval(interval)\n      }, [refreshToken, expiresIn])\n    \n      return accessToken\n}\n\nexport default useAuth\n","import React from 'react'\nimport { useState, useEffect } from \"react\"\nimport SpotifyPlayer from \"react-spotify-web-playback\"\n\nfunction Player({ accessToken, trackUri }) {\n    const [play, setPlay] = useState(false)\n\n    useEffect(() => setPlay(true), [trackUri])\n\n    if (!accessToken) return null\n    return <SpotifyPlayer\n        token = {accessToken}\n        showSaveIcon\n        callback={state => {\n            if (!state.isPlaying) setPlay(false)\n        }}\n        play={play}\n        uris = {trackUri ? [trackUri] : []}\n    />\n}\n\nexport default Player\n","import React from \"react\"\n\nexport default function TrackSearchResult({ track, chooseTrack }) {\n  function handlePlay() {\n      chooseTrack(track)\n  }\n\n  return (\n    <div \n        className=\"d-flex m-2 align-items-center\" \n        style={{ cursor: \"pointer\" }}\n        onClick={ handlePlay }\n    >\n      <img src={track.albumUrl} style={{ height: \"64px\", width: \"64px\" }} />\n      <div className=\"ml-3\">\n        <div>{track.title}</div>\n        <div className=\"text-muted\">{track.artist}</div>\n      </div>\n    </div>\n  )\n}","import {React, useState, useEffect} from 'react'\nimport useAuth from \"./useAuth\"\nimport Player from \"./Player\"\nimport { Container, Form} from 'react-bootstrap'\nimport SpotifyWebApi from 'spotify-web-api-node'\nimport TrackSearchResult from './TrackSearchResult'\nimport axios from 'axios'\n\nconst spotifyApi = new SpotifyWebApi({\n     clientId: \"bc43d635979c4b9e8e108dcf47ecc4e0\",\n})\n\nfunction Dashboard({code}) {\n    const accessToken = useAuth(code)\n    const [search, setSearch] = useState(\"\")\n    const [searchResults, setSearchResults] = useState([])\n    const [playingTrack, setPlayingTrack] = useState()\n    const [lyrics, setLyrics] = useState(\"\")\n\n    function chooseTrack(track) {\n        setPlayingTrack(track)\n        setSearch(\"\")\n        setLyrics(\"\")\n    }\n\n    useEffect(() => {\n        if (!playingTrack) return \n\n        axios.get('http://localhost:3001/lyrics', {\n            params: {\n                track: playingTrack.title,\n                artist: playingTrack.artist\n            }\n        }).then(res => {\n            setLyrics(res.data.lyrics)\n        })\n    }, [playingTrack])\n\n    function chooseTrack(track) {\n        setPlayingTrack(track)\n        setSearch('')\n    }\n\n    useEffect(() => {\n        if (!accessToken) return\n        spotifyApi.setAccessToken(accessToken)\n    }, [accessToken])\n\n    useEffect(() => {\n        if (!search) return setSearchResults([])\n        if (!accessToken) return\n    \n        let cancel = false\n        spotifyApi.searchTracks(search).then(res => {\n          if (cancel) return\n          setSearchResults(\n            res.body.tracks.items.map(track => {\n              const smallestAlbumImage = track.album.images.reduce(\n                (smallest, image) => {\n                  if (image.height < smallest.height) return image\n                  return smallest\n                },\n                track.album.images[0]\n              )\n    \n              return {\n                artist: track.artists[0].name,\n                title: track.name,\n                uri: track.uri,\n                albumUrl: smallestAlbumImage.url,\n              }\n            })\n          )\n        })\n    \n        return () => (cancel = true)\n    }, [search, accessToken])\n\n    return (\n        <Container className=\"d-flex flex-column py-2\" style={{ height: \"100vh\" }}>\n            <Form.Control \n                type=\"search\" \n                placeholder=\"Search Songs/ Artists\" \n                value={search} \n                onChange={e => setSearch(e.target.value)}\n            />\n            <div className=\"flex-grow-1 my-2\" style={{ overflowY:\"auto\"}}>\n                {searchResults.map(track => (\n                    <TrackSearchResult \n                        track={track} \n                        key={track.uri} \n                        chooseTrack={chooseTrack}/>\n                ))}\n                {searchResults.length === 0 && (\n                    <div className=\"text-center\" style={{ whiteSpace: \"pre\" }}>\n                        {lyrics}\n                    </div>\n                )}\n            </div>\n            <div>\n                <Player  accessToken={accessToken} trackUri={playingTrack?.uri} />\n            </div>\n        </Container>\n    )\n}\n\nexport default Dashboard \n","import 'bootstrap/dist/css/bootstrap.css';\nimport Login from \"./Login\";\nimport Dashboard from \"./Dashboard\";\n\n// Get value for 'code' variable in URL\nconst code = new URLSearchParams(window.location.search).get('code')\n\n// If you get the code then render Dashboard if not render Login component\nfunction App() {\n  return  code ? <Dashboard code={code} /> : <Login />\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}